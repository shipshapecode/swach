name: Package and Release

on:
  push:
    tags:
      - v*

jobs:
  test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use node 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Yarn install
        run: yarn install-deps
      - name: Lint JS
        run: yarn lint:js
      - name: Lint HBS
        run: yarn lint:hbs
      - name: Get xvfb
        run: sudo apt-get install xvfb
      - name: Browser Test
        run: xvfb-run --auto-servernum yarn test:ember
  build:
    name: Build (${{ matrix.os }})
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11.0, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use node 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Yarn install
        run: yarn install-deps
      - name: Add macOS certs
        if: startsWith(matrix.os, 'macos') && startsWith(github.ref, 'refs/tags/')
        run: chmod +x add-osx-cert.sh && ./add-osx-cert.sh
        env:
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      - name: Add Windows certificate
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'win-certificate.pfx'
          encodedString: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}
      - name: Install Snapcraft
        if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/')
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.snapcraft_token }}    
      - name: Make
        if: startsWith(github.ref, 'refs/tags/')
        run: yarn make
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          WINDOWS_PFX_FILE: ${{ steps.write_file.outputs.filePath }}
          WINDOWS_PFX_PASSWORD: ${{ secrets.WINDOWS_PFX_PASSWORD }}
          DEBUG: "forge-maker-snap:*"
          SNAPCRAFT_BUILD_ENVIRONMENT: host
      # - name: Make Apple arm64
      #   if: matrix.os == 'macos-11.0' && startsWith(github.ref, 'refs/tags/')
      #   run: yarn make --arch=arm64
      #   env:
      #     APPLE_ID: ${{ secrets.APPLE_ID }}
      #     APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD_ARM }}
      - name: GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            electron-app/out/**/*.deb
            electron-app/out/**/*.dmg
            electron-app/out/**/*Setup.exe
            electron-app/out/**/*.rpm
            electron-app/out/**/*.zip
      - name: Snapcraft release
        if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/')
        run: sudo snapcraft upload --release=stable electron-app/out/make/*.snap
      - name: Create a Sentry.io release
        uses: tclindner/sentry-releases-action@v1.2.0
        if: matrix.os == 'ubuntu-latest'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ship-shape-consulting-llc
          SENTRY_PROJECT: swach
        with:
          tagName: ${{ github.ref }}
          environment: production
          sourceMapOptions: '{"include": ["electron-app/ember-dist/assets"], "urlPrefix": "~/ember-dist/assets"}'
